# Cristea Radu- OOP--seminar-1A4 26.02.2023
 //problema 2
#include <iostream>
#include <cstring>

using namespace std;

int conv(char s[1024])
{
    int nr = 0;
    for (int i = 0; i < strlen(s) && s[i]>='0' && s[i] <= '9';i++)
    {
    nr = nr * 10 + (s[i] - '0');
  }
    return nr;
}
int main() 
{
    int s = 0;
    char line[1024];
    FILE* fp; fopen_s(&fp,"Source.txt", "r");
    //Checks if file is empty    
    if (fp == NULL)
    {
        return 0;
    }
    while (fgets(line, 1024, fp))
    {
        s+=conv(line);
    }
    printf("%d", s);
}

//Problema 3


#include <iostream>
#include <cstring>
#include <stdio.h>
#include <string.h>
#include <stdlib.h>
char maxcuv[1024], line[1024];
char final[1024], curentcuv[1024];
int main()
{
   
    scanf("%[^\n]", line);
    int lgmax = 0, lg;
    int i = 0;
    int ok = 0;
    int nr;
    int k = 0, cont = 0;
    while (line[i] ==' ')
    {
        i++;
    }
    while (line[i]!='\0')
    {
        lg = 0;
        while (line[i] != ' ')
        {
            curentcuv[lg] = line[i];
            lg++;
            i++;
        }
        if (strlen(curentcuv) > strlen(maxcuv)) { strcpy(maxcuv, curentcuv); ok = 1; nr = i - strlen(maxcuv); }
        else if (strlen(curentcuv) == strlen(maxcuv))
        {
            int j = 0;
            while (j < strlen(maxcuv) && ok == 0)
            {
                if (curentcuv[j] == maxcuv[j])
                    j++;
                else if (curentcuv[j] < maxcuv[j])
                {
                    strcpy(maxcuv, curentcuv); ok = 1;
                }
            }
            
        }
        //sterg cuvantul maxim, adica inlocuiesc caractere cuvantului maxim cu spatii
        else strcpy(curentcuv, NULL);
        if (ok==1)
        {
            strcat(final, maxcuv); strcat(final, " ");
            for (int t = nr; t < i; t++) line[t] = ' '; 
            strcpy(maxcuv, NULL);
            strcpy(curentcuv,NULL);
            i = 0;
        }
        
        for (int g = 0; g < strlen(line) && k == 1; g++)
        {
            if (line[g] != ' ')
                k = 1;
        }
        
    }
    char* p;
    p = strtok(final," ");
    while (p)
    {
        printf("%s\n", p);

        p = strtok(NULL, " ");
    }
}





//Problema 4

#include <iostream>

using namespace std;


bool isPrime(int n)

{

    for (int tr = 2; tr < n / 2; tr++)

        if ((n % tr ) == 0)

            return false;

    return true;

}

int main()

{

    int n;

    std::cout << "Enter a number:";

    std::cin >> n;

    if (isPrime(n))

        std::cout << n << " is prime !";

    else 

        std::cout << n << " is NOT prime !";

    return 0;

}
